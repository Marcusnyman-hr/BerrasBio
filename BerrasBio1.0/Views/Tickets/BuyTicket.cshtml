@model BerrasBio1._0.Models.ViewModels.BuyTicketVM

@{
    ViewData["Title"] = "BuyTicket";
}
<div class="buy-ticket">
  <div class="buy-ticket-heading">
  <h1>@ViewBag.MovieTitle</h1>
  <h2>@ViewBag.MovieDate</h2>
  </div>
  <div class="buy-ticket-form">
    <form asp-controller="Tickets" asp-action="BuyTicket" name="buyTicket" id="buy-ticket-form">
      <div asp-validation-summary="ModelOnly" class="text-danger"></div>
      <div class="form-group">
        <label asp-for="FirstName" class="control-label"></label>
        <input asp-for="FirstName" class="form-control" />
      </div>
      <span asp-validation-for="FirstName" class="text-danger"></span>
      <div class="form-group">
        <label asp-for="LastName" class="control-label"></label>
        <input asp-for="LastName" class="form-control" />

      </div>
      <span asp-validation-for="LastName" class="text-danger"></span>
      <div class="form-group">
        <label asp-for="Email" class="control-label"></label>
        <input asp-for="Email" class="form-control" />
      </div>
      <span asp-validation-for="Email" class="text-danger"></span>
      <input asp-for="ShowingId" value="@ViewBag.ShowingId" class="display-none" />
      <div class="form-group">
        <input type="hidden" asp-for="AmountOfTickets" class="form-control" id="amountOfTickets" />
        <input type="hidden" asp-for="SelectedSeats" class="form-control" id="selectedSeats" />
          <span asp-validation-for="AmountOfTickets" class="text-danger"></span>
      </div>
      @*Creates the seatpicker, which consits of x amount of divs to make up the seatpicker, rows and seats.*@
      <div class="seat-picker">
        @for (int i = 0; i < Model.Seats.Count / 10; i++)
        {
          <div class="seat-row">
            @if (i == 0)
            {
              for (int y = 0; y < 10; y++)
              {
                if (Model.Seats[y].Booked == true)
                {
                  <div class="seat seat-booked" id="@Model.Seats[y].Id">@Model.Seats[y].Row@Model.Seats[y].Number</div>
                }
                else
                {
                  <div class="seat seat-free" id="@Model.Seats[y].Id">@Model.Seats[y].Row@Model.Seats[y].Number</div>
                }
              }
            }
            else
            {
              for (int y = 0; y < 10; y++)
              {
                int seat = int.Parse(i.ToString() + y.ToString());
                if (Model.Seats[seat].Booked == true)
                {
                  <div class="seat seat-booked" id="@Model.Seats[seat].Id">@Model.Seats[seat].Row@Model.Seats[seat].Number</div>
                }
                else
                {
                  <div class="seat seat-free" id="@Model.Seats[seat].Id">@Model.Seats[seat].Row@Model.Seats[seat].Number</div>
                }
              }
            }
          </div>
        }
        <span id="seat-picker-warning"></span>
      </div>
      <div class="ticket-prices flex-center">
        <h5>Price per ticket for this show: @ViewBag.ShowingPrice</h5>
      </div>
      <div class="order-total">
        <h4>Your order total is: </h4><h3 id="order-total"></h3>
      </div>
      <div class="flex-center">
        @*Uses javascript to submit the form, to be able to do some frontend validation etc*@
        <a href="javascript:{}" onclick="submitForm()" class="btn-primary">submit</a>
      </div>

    </form>
  </div>

  <div>
    <a asp-action="Index" class="back-link">Back to List</a>
  </div>
  </div>

<div class="movie-details-bg-container"><img src="~/assets/img/backdrops/@ViewBag.MovieBackdrop" class="movie-details-bg" /></div>

<script>
  //Get the price for the showing from viewbag
  let ticketPrice = parseInt('@ViewBag.ShowingPrice', 10);
  //Select the input elements
  let amountOfTicketsInput = document.getElementById("amountOfTickets");
  let orderTotal = document.getElementById("order-total");

  let freeSeats = document.getElementsByClassName("seat-free");

  let selectedSeatsInput = document.getElementById("selectedSeats");

  let selectedSeats = [];
  //Function that runs onload to keep the already selected seats selected if backend validation fails
    window.onload = function () {
    let selectedSeats = '@Model.SelectedSeats';
      if (selectedSeats) {
        selectedSeatsInput.value = selectedSeats;
        let splitted = selectedSeats.split(",");
        amountOfTicketsInput.value = splitted.length;
      splitted.forEach((seat) => {
        let selectedSeat = document.getElementById(seat);
        selectedSeat.classList.add("seat-selected");
      })
    } else {
      console.log("selected seats dont exist")
    }
  };
  //Function to select the seat that is clicked.
  let selectSeat = function () {
    let id = this.id
    let isAlreadySelected = selectedSeats.indexOf(id);
    if (isAlreadySelected != -1) {
      selectedSeats.splice(isAlreadySelected, 1);
      this.classList.remove("seat-selected")
    } else {
      if (selectedSeats.length >= 12) {
        document.getElementById("seat-picker-warning").innerText = "You can't reserve more than 12 seats.";
        return;
      }
      this.classList.add("seat-selected");
      selectedSeats.push(id);
    }
    amountOfTicketsInput.value = selectedSeats.length;
    selectedSeatsInput.value = selectedSeats.toString();
    let sum = ticketPrice * selectedSeats.length;
    orderTotal.innerText = '  ' + sum + '$';
    console.log(isAlreadySelected);
    console.log(selectedSeats);
  };

  for (let i = 0; i < freeSeats.length; i++) {
    freeSeats[i].addEventListener('click', selectSeat, false);
  }

  let submitForm = function () {
    if (amountOfTicketsInput.value > 0 || selectedSeatsInput.value.length > 1) {
      document.getElementById('buy-ticket-form').submit();
    } else {
      document.getElementById("seat-picker-warning").innerText = "Please chose your seats before proceeding.";
    }

  }


</script>


